(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/thirdweb/dist/esm/extensions/erc7702/__generated__/MinimalAccount/write/execute.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "encodeExecute": (()=>encodeExecute),
    "encodeExecuteParams": (()=>encodeExecuteParams),
    "execute": (()=>execute),
    "isExecuteSupported": (()=>isExecuteSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/prepare-contract-call.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/once.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x3f707e6b";
const FN_INPUTS = [
    {
        type: "tuple[]",
        name: "calls",
        components: [
            {
                type: "address",
                name: "target"
            },
            {
                type: "uint256",
                name: "value"
            },
            {
                type: "bytes",
                name: "data"
            }
        ]
    }
];
const FN_OUTPUTS = [];
function isExecuteSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeExecuteParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.calls
    ]);
}
function encodeExecute(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeExecuteParams(options).slice(2);
}
function execute(options) {
    const asyncOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["once"])(async ()=>{
        return "asyncParams" in options ? await options.asyncParams() : options;
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareContractCall"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: async ()=>{
            const resolvedOptions = await asyncOptions();
            return [
                resolvedOptions.calls
            ];
        },
        value: async ()=>(await asyncOptions()).overrides?.value,
        accessList: async ()=>(await asyncOptions()).overrides?.accessList,
        gas: async ()=>(await asyncOptions()).overrides?.gas,
        gasPrice: async ()=>(await asyncOptions()).overrides?.gasPrice,
        maxFeePerGas: async ()=>(await asyncOptions()).overrides?.maxFeePerGas,
        maxPriorityFeePerGas: async ()=>(await asyncOptions()).overrides?.maxPriorityFeePerGas,
        nonce: async ()=>(await asyncOptions()).overrides?.nonce,
        extraGas: async ()=>(await asyncOptions()).overrides?.extraGas,
        erc20Value: async ()=>(await asyncOptions()).overrides?.erc20Value,
        authorizationList: async ()=>(await asyncOptions()).overrides?.authorizationList
    });
} //# sourceMappingURL=execute.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IEntryPoint/events/UserOperationRevertReason.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "userOperationRevertReasonEvent": (()=>userOperationRevertReasonEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$event$2f$prepare$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/event/prepare-event.js [app-client] (ecmascript)");
;
function userOperationRevertReasonEvent(filters = {}) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$event$2f$prepare$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareEvent"])({
        signature: "event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason)",
        filters
    });
} //# sourceMappingURL=UserOperationRevertReason.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IEntryPoint_v07/events/PostOpRevertReason.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "postOpRevertReasonEvent": (()=>postOpRevertReasonEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$event$2f$prepare$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/event/prepare-event.js [app-client] (ecmascript)");
;
function postOpRevertReasonEvent(filters = {}) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$event$2f$prepare$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareEvent"])({
        signature: "event PostOpRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason)",
        filters
    });
} //# sourceMappingURL=PostOpRevertReason.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/read/allowance.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "allowance": (()=>allowance),
    "decodeAllowanceResult": (()=>decodeAllowanceResult),
    "encodeAllowance": (()=>encodeAllowance),
    "encodeAllowanceParams": (()=>encodeAllowanceParams),
    "isAllowanceSupported": (()=>isAllowanceSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xdd62ed3e";
const FN_INPUTS = [
    {
        type: "address",
        name: "owner"
    },
    {
        type: "address",
        name: "spender"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isAllowanceSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeAllowanceParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.owner,
        options.spender
    ]);
}
function encodeAllowance(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeAllowanceParams(options).slice(2);
}
function decodeAllowanceResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function allowance(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.owner,
            options.spender
        ]
    });
} //# sourceMappingURL=allowance.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/write/approve.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "approve": (()=>approve),
    "encodeApprove": (()=>encodeApprove),
    "encodeApproveParams": (()=>encodeApproveParams),
    "isApproveSupported": (()=>isApproveSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/prepare-contract-call.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/once.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x095ea7b3";
const FN_INPUTS = [
    {
        type: "address",
        name: "spender"
    },
    {
        type: "uint256",
        name: "value"
    }
];
const FN_OUTPUTS = [
    {
        type: "bool"
    }
];
function isApproveSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeApproveParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.spender,
        options.value
    ]);
}
function encodeApprove(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeApproveParams(options).slice(2);
}
function approve(options) {
    const asyncOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["once"])(async ()=>{
        return "asyncParams" in options ? await options.asyncParams() : options;
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareContractCall"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: async ()=>{
            const resolvedOptions = await asyncOptions();
            return [
                resolvedOptions.spender,
                resolvedOptions.value
            ];
        },
        value: async ()=>(await asyncOptions()).overrides?.value,
        accessList: async ()=>(await asyncOptions()).overrides?.accessList,
        gas: async ()=>(await asyncOptions()).overrides?.gas,
        gasPrice: async ()=>(await asyncOptions()).overrides?.gasPrice,
        maxFeePerGas: async ()=>(await asyncOptions()).overrides?.maxFeePerGas,
        maxPriorityFeePerGas: async ()=>(await asyncOptions()).overrides?.maxPriorityFeePerGas,
        nonce: async ()=>(await asyncOptions()).overrides?.nonce,
        extraGas: async ()=>(await asyncOptions()).overrides?.extraGas,
        erc20Value: async ()=>(await asyncOptions()).overrides?.erc20Value,
        authorizationList: async ()=>(await asyncOptions()).overrides?.authorizationList
    });
} //# sourceMappingURL=approve.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc20/write/approve.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "approve": (()=>approve)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/units.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc20$2f$_$5f$generated_$5f2f$IERC20$2f$write$2f$approve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/write/approve.js [app-client] (ecmascript)");
;
;
function approve(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc20$2f$_$5f$generated_$5f2f$IERC20$2f$write$2f$approve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["approve"])({
        contract: options.contract,
        asyncParams: async ()=>{
            let amount;
            if ("amount" in options) {
                // if we need to parse the amount from ether to gwei then we pull in the decimals extension
                const { decimals } = await __turbopack_context__.r("[project]/node_modules/thirdweb/dist/esm/extensions/erc20/read/decimals.js [app-client] (ecmascript, async loader)")(__turbopack_context__.i);
                // if this fails we fall back to `18` decimals
                const d = await decimals(options).catch(()=>18);
                // turn ether into gwei
                amount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toUnits"])(options.amount.toString(), d);
            } else {
                amount = options.amountWei;
            }
            return {
                spender: options.spender,
                value: amount,
                overrides: {
                    erc20Value: {
                        amountWei: amount,
                        tokenAddress: options.contract.address
                    }
                }
            };
        }
    });
} //# sourceMappingURL=approve.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IAccountPermissions/read/getPermissionsForSigner.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeGetPermissionsForSignerResult": (()=>decodeGetPermissionsForSignerResult),
    "encodeGetPermissionsForSigner": (()=>encodeGetPermissionsForSigner),
    "encodeGetPermissionsForSignerParams": (()=>encodeGetPermissionsForSignerParams),
    "getPermissionsForSigner": (()=>getPermissionsForSigner),
    "isGetPermissionsForSignerSupported": (()=>isGetPermissionsForSignerSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xf15d424e";
const FN_INPUTS = [
    {
        type: "address",
        name: "signer"
    }
];
const FN_OUTPUTS = [
    {
        type: "tuple",
        name: "permissions",
        components: [
            {
                type: "address",
                name: "signer"
            },
            {
                type: "address[]",
                name: "approvedTargets"
            },
            {
                type: "uint256",
                name: "nativeTokenLimitPerTransaction"
            },
            {
                type: "uint128",
                name: "startTimestamp"
            },
            {
                type: "uint128",
                name: "endTimestamp"
            }
        ]
    }
];
function isGetPermissionsForSignerSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeGetPermissionsForSignerParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.signer
    ]);
}
function encodeGetPermissionsForSigner(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeGetPermissionsForSignerParams(options).slice(2);
}
function decodeGetPermissionsForSignerResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function getPermissionsForSigner(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.signer
        ]
    });
} //# sourceMappingURL=getPermissionsForSigner.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IAccountPermissions/write/setPermissionsForSigner.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "encodeSetPermissionsForSigner": (()=>encodeSetPermissionsForSigner),
    "encodeSetPermissionsForSignerParams": (()=>encodeSetPermissionsForSignerParams),
    "isSetPermissionsForSignerSupported": (()=>isSetPermissionsForSignerSupported),
    "setPermissionsForSigner": (()=>setPermissionsForSigner)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/prepare-contract-call.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/once.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x5892e236";
const FN_INPUTS = [
    {
        type: "tuple",
        name: "req",
        components: [
            {
                type: "address",
                name: "signer"
            },
            {
                type: "uint8",
                name: "isAdmin"
            },
            {
                type: "address[]",
                name: "approvedTargets"
            },
            {
                type: "uint256",
                name: "nativeTokenLimitPerTransaction"
            },
            {
                type: "uint128",
                name: "permissionStartTimestamp"
            },
            {
                type: "uint128",
                name: "permissionEndTimestamp"
            },
            {
                type: "uint128",
                name: "reqValidityStartTimestamp"
            },
            {
                type: "uint128",
                name: "reqValidityEndTimestamp"
            },
            {
                type: "bytes32",
                name: "uid"
            }
        ]
    },
    {
        type: "bytes",
        name: "signature"
    }
];
const FN_OUTPUTS = [];
function isSetPermissionsForSignerSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeSetPermissionsForSignerParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.req,
        options.signature
    ]);
}
function encodeSetPermissionsForSigner(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeSetPermissionsForSignerParams(options).slice(2);
}
function setPermissionsForSigner(options) {
    const asyncOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["once"])(async ()=>{
        return "asyncParams" in options ? await options.asyncParams() : options;
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareContractCall"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: async ()=>{
            const resolvedOptions = await asyncOptions();
            return [
                resolvedOptions.req,
                resolvedOptions.signature
            ];
        },
        value: async ()=>(await asyncOptions()).overrides?.value,
        accessList: async ()=>(await asyncOptions()).overrides?.accessList,
        gas: async ()=>(await asyncOptions()).overrides?.gas,
        gasPrice: async ()=>(await asyncOptions()).overrides?.gasPrice,
        maxFeePerGas: async ()=>(await asyncOptions()).overrides?.maxFeePerGas,
        maxPriorityFeePerGas: async ()=>(await asyncOptions()).overrides?.maxPriorityFeePerGas,
        nonce: async ()=>(await asyncOptions()).overrides?.nonce,
        extraGas: async ()=>(await asyncOptions()).overrides?.extraGas,
        erc20Value: async ()=>(await asyncOptions()).overrides?.erc20Value,
        authorizationList: async ()=>(await asyncOptions()).overrides?.authorizationList
    });
} //# sourceMappingURL=setPermissionsForSigner.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/account/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SignerPermissionRequest": (()=>SignerPermissionRequest)
});
const SignerPermissionRequest = [
    {
        name: "signer",
        type: "address"
    },
    {
        name: "isAdmin",
        type: "uint8"
    },
    {
        name: "approvedTargets",
        type: "address[]"
    },
    {
        name: "nativeTokenLimitPerTransaction",
        type: "uint256"
    },
    {
        name: "permissionStartTimestamp",
        type: "uint128"
    },
    {
        name: "permissionEndTimestamp",
        type: "uint128"
    },
    {
        name: "reqValidityStartTimestamp",
        type: "uint128"
    },
    {
        name: "reqValidityEndTimestamp",
        type: "uint128"
    },
    {
        name: "uid",
        type: "bytes32"
    }
]; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/account/common.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultPermissionsForAdmin": (()=>defaultPermissionsForAdmin),
    "signPermissionRequest": (()=>signPermissionRequest),
    "toContractPermissions": (()=>toContractPermissions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$constants$2f$addresses$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/constants/addresses.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/date.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$random$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/random.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/units.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$account$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/account/types.js [app-client] (ecmascript)");
;
;
;
;
;
async function signPermissionRequest(options) {
    const { account, contract, req } = options;
    const signature = await account.signTypedData({
        domain: {
            name: "Account",
            version: "1",
            verifyingContract: contract.address,
            chainId: contract.chain.id
        },
        primaryType: "SignerPermissionRequest",
        types: {
            SignerPermissionRequest: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$account$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SignerPermissionRequest"]
        },
        message: req
    });
    return {
        req,
        signature
    };
}
async function toContractPermissions(options) {
    const { target, permissions } = options;
    return {
        approvedTargets: permissions.approvedTargets === "*" ? [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$constants$2f$addresses$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ZERO_ADDRESS"]
        ] : permissions.approvedTargets,
        nativeTokenLimitPerTransaction: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toWei"])(permissions.nativeTokenLimitPerTransaction?.toString() || "0"),
        permissionStartTimestamp: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dateToSeconds"])(permissions.permissionStartTimestamp || new Date(0)),
        permissionEndTimestamp: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dateToSeconds"])(permissions.permissionEndTimestamp || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tenYearsFromNow"])()),
        reqValidityStartTimestamp: 0n,
        reqValidityEndTimestamp: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dateToSeconds"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tenYearsFromNow"])()),
        uid: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$random$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomBytesHex"])(),
        isAdmin: 0,
        signer: target
    };
}
async function defaultPermissionsForAdmin(options) {
    const { target, action } = options;
    return {
        approvedTargets: [],
        nativeTokenLimitPerTransaction: 0n,
        permissionStartTimestamp: 0n,
        permissionEndTimestamp: 0n,
        reqValidityStartTimestamp: 0n,
        reqValidityEndTimestamp: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["dateToSeconds"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$date$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tenYearsFromNow"])()),
        uid: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$random$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomBytesHex"])(),
        isAdmin: action === "add-admin" ? 1 : action === "remove-admin" ? 2 : 0,
        signer: target
    };
} //# sourceMappingURL=common.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/account/addSessionKey.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "addSessionKey": (()=>addSessionKey),
    "isAddSessionKeySupported": (()=>isAddSessionKeySupported),
    "shouldUpdateSessionKey": (()=>shouldUpdateSessionKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$constants$2f$addresses$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/constants/addresses.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$is$2d$contract$2d$deployed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/is-contract-deployed.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/units.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$_$5f$generated_$5f2f$IAccountPermissions$2f$read$2f$getPermissionsForSigner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IAccountPermissions/read/getPermissionsForSigner.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$_$5f$generated_$5f2f$IAccountPermissions$2f$write$2f$setPermissionsForSigner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IAccountPermissions/write/setPermissionsForSigner.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$account$2f$common$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/account/common.js [app-client] (ecmascript)");
;
;
;
;
;
;
function addSessionKey(options) {
    const { contract, sessionKeyAddress, account, permissions } = options;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$_$5f$generated_$5f2f$IAccountPermissions$2f$write$2f$setPermissionsForSigner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setPermissionsForSigner"])({
        contract,
        async asyncParams () {
            const { req, signature } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$account$2f$common$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["signPermissionRequest"])({
                account,
                contract,
                req: await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$account$2f$common$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toContractPermissions"])({
                    target: sessionKeyAddress,
                    permissions
                })
            });
            return {
                signature,
                req
            };
        }
    });
}
function isAddSessionKeySupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$_$5f$generated_$5f2f$IAccountPermissions$2f$write$2f$setPermissionsForSigner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSetPermissionsForSignerSupported"])(availableSelectors);
}
async function shouldUpdateSessionKey(args) {
    const { accountContract, sessionKeyAddress, newPermissions } = args;
    // check if account is deployed
    const accountDeployed = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$is$2d$contract$2d$deployed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isContractDeployed"])(accountContract);
    if (!accountDeployed) {
        return true;
    }
    // get current permissions
    const currentPermissions = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc4337$2f$_$5f$generated_$5f2f$IAccountPermissions$2f$read$2f$getPermissionsForSigner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPermissionsForSigner"])({
        contract: accountContract,
        signer: sessionKeyAddress
    });
    // check end time validity
    if (currentPermissions.endTimestamp && currentPermissions.endTimestamp < Math.floor(new Date().getTime() / 1000)) {
        return true;
    }
    // check targets
    if (!areSessionKeyContractTargetsEqual(currentPermissions.approvedTargets, newPermissions.approvedTargets)) {
        return true;
    }
    // check if the new native token limit is greater than the current one
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toWei"])(newPermissions.nativeTokenLimitPerTransaction?.toString() ?? "0") > currentPermissions.nativeTokenLimitPerTransaction) {
        return true;
    }
    return false;
}
function areSessionKeyContractTargetsEqual(currentTargets, newTargets) {
    // Handle the case where approvedTargets is "*"
    if (newTargets === "*" && currentTargets.length === 1 && currentTargets[0] === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$constants$2f$addresses$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ZERO_ADDRESS"]) {
        return true;
    }
    if (newTargets !== "*") {
        return newTargets.map((target)=>target.toLowerCase()).every((target)=>currentTargets.map((t)=>t.toLowerCase()).includes(target));
    }
    return false;
} //# sourceMappingURL=addSessionKey.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IEntryPoint/read/getNonce.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeGetNonceResult": (()=>decodeGetNonceResult),
    "encodeGetNonce": (()=>encodeGetNonce),
    "encodeGetNonceParams": (()=>encodeGetNonceParams),
    "getNonce": (()=>getNonce),
    "isGetNonceSupported": (()=>isGetNonceSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x35567e1a";
const FN_INPUTS = [
    {
        type: "address",
        name: "sender"
    },
    {
        type: "uint192",
        name: "key"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256",
        name: "nonce"
    }
];
function isGetNonceSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeGetNonceParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.sender,
        options.key
    ]);
}
function encodeGetNonce(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeGetNonceParams(options).slice(2);
}
function decodeGetNonceResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function getNonce(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.sender,
            options.key
        ]
    });
} //# sourceMappingURL=getNonce.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IEntryPoint/read/getUserOpHash.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeGetUserOpHashResult": (()=>decodeGetUserOpHashResult),
    "encodeGetUserOpHash": (()=>encodeGetUserOpHash),
    "encodeGetUserOpHashParams": (()=>encodeGetUserOpHashParams),
    "getUserOpHash": (()=>getUserOpHash),
    "isGetUserOpHashSupported": (()=>isGetUserOpHashSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xa6193531";
const FN_INPUTS = [
    {
        type: "tuple",
        name: "userOp",
        components: [
            {
                type: "address",
                name: "sender"
            },
            {
                type: "uint256",
                name: "nonce"
            },
            {
                type: "bytes",
                name: "initCode"
            },
            {
                type: "bytes",
                name: "callData"
            },
            {
                type: "uint256",
                name: "callGasLimit"
            },
            {
                type: "uint256",
                name: "verificationGasLimit"
            },
            {
                type: "uint256",
                name: "preVerificationGas"
            },
            {
                type: "uint256",
                name: "maxFeePerGas"
            },
            {
                type: "uint256",
                name: "maxPriorityFeePerGas"
            },
            {
                type: "bytes",
                name: "paymasterAndData"
            },
            {
                type: "bytes",
                name: "signature"
            }
        ]
    }
];
const FN_OUTPUTS = [
    {
        type: "bytes32"
    }
];
function isGetUserOpHashSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeGetUserOpHashParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.userOp
    ]);
}
function encodeGetUserOpHash(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeGetUserOpHashParams(options).slice(2);
}
function decodeGetUserOpHashResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function getUserOpHash(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.userOp
        ]
    });
} //# sourceMappingURL=getUserOpHash.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc4337/__generated__/IEntryPoint_v07/read/getUserOpHash.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeGetUserOpHashResult": (()=>decodeGetUserOpHashResult),
    "encodeGetUserOpHash": (()=>encodeGetUserOpHash),
    "encodeGetUserOpHashParams": (()=>encodeGetUserOpHashParams),
    "getUserOpHash": (()=>getUserOpHash),
    "isGetUserOpHashSupported": (()=>isGetUserOpHashSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x22cdde4c";
const FN_INPUTS = [
    {
        type: "tuple",
        name: "userOp",
        components: [
            {
                type: "address",
                name: "sender"
            },
            {
                type: "uint256",
                name: "nonce"
            },
            {
                type: "bytes",
                name: "initCode"
            },
            {
                type: "bytes",
                name: "callData"
            },
            {
                type: "bytes32",
                name: "accountGasLimits"
            },
            {
                type: "uint256",
                name: "preVerificationGas"
            },
            {
                type: "bytes32",
                name: "gasFees"
            },
            {
                type: "bytes",
                name: "paymasterAndData"
            },
            {
                type: "bytes",
                name: "signature"
            }
        ]
    }
];
const FN_OUTPUTS = [
    {
        type: "bytes32"
    }
];
function isGetUserOpHashSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeGetUserOpHashParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.userOp
    ]);
}
function encodeGetUserOpHash(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeGetUserOpHashParams(options).slice(2);
}
function decodeGetUserOpHashResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function getUserOpHash(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.userOp
        ]
    });
} //# sourceMappingURL=getUserOpHash.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/AddressResolver/read/text.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeTextResult": (()=>decodeTextResult),
    "encodeText": (()=>encodeText),
    "encodeTextParams": (()=>encodeTextParams),
    "isTextSupported": (()=>isTextSupported),
    "text": (()=>text)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x59d1d43c";
const FN_INPUTS = [
    {
        type: "bytes32",
        name: "name"
    },
    {
        type: "string",
        name: "key"
    }
];
const FN_OUTPUTS = [
    {
        type: "string"
    }
];
function isTextSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTextParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.name,
        options.key
    ]);
}
function encodeText(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTextParams(options).slice(2);
}
function decodeTextResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function text(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.name,
            options.key
        ]
    });
} //# sourceMappingURL=text.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/UniversalResolver/read/resolve.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeResolveResult": (()=>decodeResolveResult),
    "encodeResolve": (()=>encodeResolve),
    "encodeResolveParams": (()=>encodeResolveParams),
    "isResolveSupported": (()=>isResolveSupported),
    "resolve": (()=>resolve)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x9061b923";
const FN_INPUTS = [
    {
        type: "bytes",
        name: "name"
    },
    {
        type: "bytes",
        name: "data"
    }
];
const FN_OUTPUTS = [
    {
        type: "bytes"
    },
    {
        type: "address"
    }
];
function isResolveSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeResolveParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.name,
        options.data
    ]);
}
function encodeResolve(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeResolveParams(options).slice(2);
}
function decodeResolveResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result);
}
async function resolve(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.name,
            options.data
        ]
    });
} //# sourceMappingURL=resolve.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BASENAME_RESOLVER_ADDRESS": (()=>BASENAME_RESOLVER_ADDRESS),
    "BASE_SEPOLIA_BASENAME_RESOLVER_ADDRESS": (()=>BASE_SEPOLIA_BASENAME_RESOLVER_ADDRESS),
    "UNIVERSAL_RESOLVER_ADDRESS": (()=>UNIVERSAL_RESOLVER_ADDRESS)
});
const UNIVERSAL_RESOLVER_ADDRESS = "0xce01f8eee7E479C928F8919abD53E553a36CeF67";
const BASENAME_RESOLVER_ADDRESS = "0xC6d566A56A1aFf6508b41f6c90ff131615583BCD";
const BASE_SEPOLIA_BASENAME_RESOLVER_ADDRESS = "0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA"; //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/resolve-text.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolveText": (()=>resolveText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$chains$2f$chain$2d$definitions$2f$ethereum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/chains/chain-definitions/ethereum.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$contract$2f$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/contract/contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$encoding$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/encoding/hex.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$namehash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/ens/namehash.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$packetToBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/ens/packetToBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/withCache.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$AddressResolver$2f$read$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/AddressResolver/read/text.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$UniversalResolver$2f$read$2f$resolve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/UniversalResolver/read/resolve.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/constants.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
async function resolveText(options) {
    const { client, name, key, resolverAddress, resolverChain } = options;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withCache"])(async ()=>{
        const contract = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$contract$2f$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContract"])({
            client,
            chain: resolverChain || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$chains$2f$chain$2d$definitions$2f$ethereum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ethereum"],
            address: resolverAddress || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNIVERSAL_RESOLVER_ADDRESS"]
        });
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$AddressResolver$2f$read$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeText"])({
            name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$namehash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["namehash"])(name),
            key
        });
        const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$UniversalResolver$2f$read$2f$resolve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolve"])({
            contract,
            name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$encoding$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["toHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$packetToBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["packetToBytes"])(name)),
            data
        });
        if (result[0] === "0x") {
            return null;
        }
        const record = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$AddressResolver$2f$read$2f$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeTextResult"])(result[0]);
        return record === "" ? null : record;
    }, {
        cacheKey: `ens:text:${name}:${key}`,
        // 1min cache
        cacheTime: 60 * 1000
    });
} //# sourceMappingURL=resolve-text.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/resolve-avatar.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolveAvatar": (()=>resolveAvatar)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/ens/avatar.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/withCache.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$resolve$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/resolve-text.js [app-client] (ecmascript)");
;
;
;
async function resolveAvatar(options) {
    const { client, name, resolverAddress, resolverChain } = options;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withCache"])(async ()=>{
        const record = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$resolve$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveText"])({
            client,
            key: "avatar",
            name,
            resolverAddress,
            resolverChain
        });
        if (!record) {
            return null;
        }
        try {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$avatar$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseAvatarRecord"])({
                uri: record,
                client
            });
        } catch (e) {
            console.error("Error parsing avatar record", e);
            return null;
        }
    }, {
        cacheKey: `ens:avatar:${name}`,
        // 1min cache
        cacheTime: 60 * 1000
    });
} //# sourceMappingURL=resolve-avatar.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/UniversalResolver/read/reverse.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeReverseResult": (()=>decodeReverseResult),
    "encodeReverse": (()=>encodeReverse),
    "encodeReverseParams": (()=>encodeReverseParams),
    "isReverseSupported": (()=>isReverseSupported),
    "reverse": (()=>reverse)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xec11c823";
const FN_INPUTS = [
    {
        type: "bytes",
        name: "reverseName"
    }
];
const FN_OUTPUTS = [
    {
        type: "string"
    },
    {
        type: "address"
    },
    {
        type: "address"
    },
    {
        type: "address"
    }
];
function isReverseSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeReverseParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.reverseName
    ]);
}
function encodeReverse(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeReverseParams(options).slice(2);
}
function decodeReverseResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result);
}
async function reverse(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.reverseName
        ]
    });
} //# sourceMappingURL=reverse.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/resolve-name.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolveName": (()=>resolveName)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$chains$2f$chain$2d$definitions$2f$ethereum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/chains/chain-definitions/ethereum.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$contract$2f$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/contract/contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$encoding$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/encoding/hex.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$packetToBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/ens/packetToBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/withCache.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$UniversalResolver$2f$read$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/UniversalResolver/read/reverse.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/constants.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
async function resolveName(options) {
    const { client, address, resolverAddress, resolverChain } = options;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withCache"])(async ()=>{
        const contract = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$contract$2f$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContract"])({
            client,
            chain: resolverChain || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$chains$2f$chain$2d$definitions$2f$ethereum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ethereum"],
            address: resolverAddress || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNIVERSAL_RESOLVER_ADDRESS"]
        });
        const reverseName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$encoding$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["toHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$packetToBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["packetToBytes"])(`${address.toLowerCase().substring(2)}.addr.reverse`));
        const [name, resolvedAddress] = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$UniversalResolver$2f$read$2f$reverse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reverse"])({
            contract,
            reverseName
        }).catch((e)=>{
            if ("data" in e && e.data === "0x7199966d") {
                return [
                    null,
                    address
                ];
            }
            throw e;
        });
        if (address.toLowerCase() !== resolvedAddress.toLowerCase()) {
            return null;
        }
        return name;
    }, {
        cacheKey: `ens:name:${resolverChain?.id || 1}:${address}`,
        // 1min cache
        cacheTime: 60 * 1000
    });
} //# sourceMappingURL=resolve-name.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/AddressResolver/read/addr.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "addr": (()=>addr),
    "decodeAddrResult": (()=>decodeAddrResult),
    "encodeAddr": (()=>encodeAddr),
    "encodeAddrParams": (()=>encodeAddrParams),
    "isAddrSupported": (()=>isAddrSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x3b3b57de";
const FN_INPUTS = [
    {
        type: "bytes32",
        name: "name"
    }
];
const FN_OUTPUTS = [
    {
        type: "address"
    }
];
function isAddrSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeAddrParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.name
    ]);
}
function encodeAddr(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeAddrParams(options).slice(2);
}
function decodeAddrResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function addr(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.name
        ]
    });
} //# sourceMappingURL=addr.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/ens/resolve-address.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolveAddress": (()=>resolveAddress)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$chains$2f$chain$2d$definitions$2f$ethereum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/chains/chain-definitions/ethereum.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$contract$2f$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/contract/contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/address.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$encoding$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/encoding/hex.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$namehash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/ens/namehash.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$packetToBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/ens/packetToBytes.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/withCache.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$AddressResolver$2f$read$2f$addr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/AddressResolver/read/addr.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$UniversalResolver$2f$read$2f$resolve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/__generated__/UniversalResolver/read/resolve.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/ens/constants.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
async function resolveAddress(options) {
    const { client, name, resolverAddress, resolverChain } = options;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAddress"])(name)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(name);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$withCache$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["withCache"])(async ()=>{
        const contract = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$contract$2f$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContract"])({
            client,
            chain: resolverChain || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$chains$2f$chain$2d$definitions$2f$ethereum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ethereum"],
            address: resolverAddress || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNIVERSAL_RESOLVER_ADDRESS"]
        });
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$AddressResolver$2f$read$2f$addr$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAddr"])({
            name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$namehash$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["namehash"])(name)
        });
        const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$ens$2f$_$5f$generated_$5f2f$UniversalResolver$2f$read$2f$resolve$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolve"])({
            contract,
            name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$encoding$2f$hex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["toHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$ens$2f$packetToBytes$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["packetToBytes"])(name)),
            data
        });
        const resolvedAddress = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$address$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAddress"])(`0x${result[0].slice(-40)}`);
        return resolvedAddress;
    }, {
        cacheKey: `ens:addr:${resolverChain?.id || 1}:${name}`,
        // 1min cache
        cacheTime: 60 * 1000
    });
} //# sourceMappingURL=resolve-address.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/write/transfer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "encodeTransfer": (()=>encodeTransfer),
    "encodeTransferParams": (()=>encodeTransferParams),
    "isTransferSupported": (()=>isTransferSupported),
    "transfer": (()=>transfer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/prepare-contract-call.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/promise/once.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xa9059cbb";
const FN_INPUTS = [
    {
        type: "address",
        name: "to"
    },
    {
        type: "uint256",
        name: "value"
    }
];
const FN_OUTPUTS = [
    {
        type: "bool"
    }
];
function isTransferSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTransferParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.to,
        options.value
    ]);
}
function encodeTransfer(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTransferParams(options).slice(2);
}
function transfer(options) {
    const asyncOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$promise$2f$once$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["once"])(async ()=>{
        return "asyncParams" in options ? await options.asyncParams() : options;
    });
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$prepare$2d$contract$2d$call$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["prepareContractCall"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: async ()=>{
            const resolvedOptions = await asyncOptions();
            return [
                resolvedOptions.to,
                resolvedOptions.value
            ];
        },
        value: async ()=>(await asyncOptions()).overrides?.value,
        accessList: async ()=>(await asyncOptions()).overrides?.accessList,
        gas: async ()=>(await asyncOptions()).overrides?.gas,
        gasPrice: async ()=>(await asyncOptions()).overrides?.gasPrice,
        maxFeePerGas: async ()=>(await asyncOptions()).overrides?.maxFeePerGas,
        maxPriorityFeePerGas: async ()=>(await asyncOptions()).overrides?.maxPriorityFeePerGas,
        nonce: async ()=>(await asyncOptions()).overrides?.nonce,
        extraGas: async ()=>(await asyncOptions()).overrides?.extraGas,
        erc20Value: async ()=>(await asyncOptions()).overrides?.erc20Value,
        authorizationList: async ()=>(await asyncOptions()).overrides?.authorizationList
    });
} //# sourceMappingURL=transfer.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc20/write/transfer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "transfer": (()=>transfer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/units.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc20$2f$_$5f$generated_$5f2f$IERC20$2f$write$2f$transfer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/write/transfer.js [app-client] (ecmascript)");
;
;
function transfer(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc20$2f$_$5f$generated_$5f2f$IERC20$2f$write$2f$transfer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transfer"])({
        contract: options.contract,
        asyncParams: async ()=>{
            let amount;
            if ("amount" in options) {
                // if we need to parse the amount from ether to gwei then we pull in the decimals extension
                const { decimals } = await __turbopack_context__.r("[project]/node_modules/thirdweb/dist/esm/extensions/erc20/read/decimals.js [app-client] (ecmascript, async loader)")(__turbopack_context__.i);
                // if this fails we fall back to `18` decimals
                const d = await decimals(options).catch(()=>18);
                // turn ether into gwei
                amount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$units$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toUnits"])(options.amount.toString(), d);
            } else {
                amount = options.amountWei;
            }
            return {
                to: options.to,
                value: amount,
                overrides: {
                    erc20Value: {
                        amountWei: amount,
                        tokenAddress: options.contract.address
                    },
                    ...options.overrides
                }
            };
        }
    });
} //# sourceMappingURL=transfer.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721A/read/tokenURI.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeTokenURIResult": (()=>decodeTokenURIResult),
    "encodeTokenURI": (()=>encodeTokenURI),
    "encodeTokenURIParams": (()=>encodeTokenURIParams),
    "isTokenURISupported": (()=>isTokenURISupported),
    "tokenURI": (()=>tokenURI)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xc87b56dd";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "_tokenId"
    }
];
const FN_OUTPUTS = [
    {
        type: "string"
    }
];
function isTokenURISupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTokenURIParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.tokenId
    ]);
}
function encodeTokenURI(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTokenURIParams(options).slice(2);
}
function decodeTokenURIResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function tokenURI(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.tokenId
        ]
    });
} //# sourceMappingURL=tokenURI.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721Enumerable/read/tokenByIndex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeTokenByIndexResult": (()=>decodeTokenByIndexResult),
    "encodeTokenByIndex": (()=>encodeTokenByIndex),
    "encodeTokenByIndexParams": (()=>encodeTokenByIndexParams),
    "isTokenByIndexSupported": (()=>isTokenByIndexSupported),
    "tokenByIndex": (()=>tokenByIndex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x4f6ccce7";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "_index"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isTokenByIndexSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTokenByIndexParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.index
    ]);
}
function encodeTokenByIndex(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTokenByIndexParams(options).slice(2);
}
function decodeTokenByIndexResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function tokenByIndex(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.index
        ]
    });
} //# sourceMappingURL=tokenByIndex.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/read/getNFT.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getNFT": (()=>getNFT)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$fetchTokenMetadata$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$parseNft$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/nft/parseNft.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721A$2f$read$2f$tokenURI$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721A/read/tokenURI.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721Enumerable$2f$read$2f$tokenByIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721Enumerable/read/tokenByIndex.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/insight/get-nfts.js [app-client] (ecmascript)");
;
;
;
;
;
;
async function getNFT(options) {
    const { useIndexer = true } = options;
    if (useIndexer) {
        try {
            return await getNFTFromInsight(options);
        } catch  {
            return await getNFTFromRPC(options);
        }
    }
    return await getNFTFromRPC(options);
}
async function getNFTFromInsight(options) {
    const nft = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFT"])({
        client: options.contract.client,
        chain: options.contract.chain,
        contractAddress: options.contract.address,
        tokenId: options.tokenId,
        includeOwners: options.includeOwner
    });
    if (!nft) {
        // fresh contracts might be delayed in indexing, so we fallback to RPC
        return getNFTFromRPC(options);
    }
    return nft;
}
async function getNFTFromRPC(options) {
    let tokenId = options.tokenId;
    if (options.tokenByIndex) {
        try {
            tokenId = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721Enumerable$2f$read$2f$tokenByIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tokenByIndex"])({
                contract: options.contract,
                index: options.tokenId
            });
        } catch  {}
    }
    const [uri, owner] = await Promise.all([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721A$2f$read$2f$tokenURI$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tokenURI"])({
            contract: options.contract,
            tokenId
        }).catch(()=>null),
        options.includeOwner ? __turbopack_context__.r("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721A/read/ownerOf.js [app-client] (ecmascript, async loader)")(__turbopack_context__.i).then((m)=>m.ownerOf({
                contract: options.contract,
                tokenId
            })).catch(()=>null) : null
    ]);
    if (!uri?.trim()) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$parseNft$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseNFT"])({
            id: tokenId,
            type: "ERC721",
            uri: ""
        }, {
            tokenId,
            tokenUri: "",
            type: "ERC721",
            owner,
            tokenAddress: options.contract.address,
            chainId: options.contract.chain.id
        });
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$parseNft$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseNFT"])(await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$fetchTokenMetadata$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchTokenMetadata"])({
        client: options.contract.client,
        tokenId,
        tokenUri: uri
    }).catch(()=>({
            id: tokenId,
            type: "ERC721",
            uri
        })), {
        tokenId: tokenId,
        tokenUri: uri,
        type: "ERC721",
        owner,
        tokenAddress: options.contract.address,
        chainId: options.contract.chain.id
    });
} //# sourceMappingURL=getNFT.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721A/read/balanceOf.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "balanceOf": (()=>balanceOf),
    "decodeBalanceOfResult": (()=>decodeBalanceOfResult),
    "encodeBalanceOf": (()=>encodeBalanceOf),
    "encodeBalanceOfParams": (()=>encodeBalanceOfParams),
    "isBalanceOfSupported": (()=>isBalanceOfSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x70a08231";
const FN_INPUTS = [
    {
        type: "address",
        name: "owner"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isBalanceOfSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeBalanceOfParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.owner
    ]);
}
function encodeBalanceOf(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeBalanceOfParams(options).slice(2);
}
function decodeBalanceOfResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function balanceOf(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.owner
        ]
    });
} //# sourceMappingURL=balanceOf.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721AQueryable/read/tokensOfOwner.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeTokensOfOwnerResult": (()=>decodeTokensOfOwnerResult),
    "encodeTokensOfOwner": (()=>encodeTokensOfOwner),
    "encodeTokensOfOwnerParams": (()=>encodeTokensOfOwnerParams),
    "isTokensOfOwnerSupported": (()=>isTokensOfOwnerSupported),
    "tokensOfOwner": (()=>tokensOfOwner)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x8462151c";
const FN_INPUTS = [
    {
        type: "address",
        name: "owner"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256[]"
    }
];
function isTokensOfOwnerSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTokensOfOwnerParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.owner
    ]);
}
function encodeTokensOfOwner(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTokensOfOwnerParams(options).slice(2);
}
function decodeTokensOfOwnerResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function tokensOfOwner(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.owner
        ]
    });
} //# sourceMappingURL=tokensOfOwner.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721Enumerable/read/tokenOfOwnerByIndex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeTokenOfOwnerByIndexResult": (()=>decodeTokenOfOwnerByIndexResult),
    "encodeTokenOfOwnerByIndex": (()=>encodeTokenOfOwnerByIndex),
    "encodeTokenOfOwnerByIndexParams": (()=>encodeTokenOfOwnerByIndexParams),
    "isTokenOfOwnerByIndexSupported": (()=>isTokenOfOwnerByIndexSupported),
    "tokenOfOwnerByIndex": (()=>tokenOfOwnerByIndex)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x2f745c59";
const FN_INPUTS = [
    {
        type: "address",
        name: "_owner"
    },
    {
        type: "uint256",
        name: "_index"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isTokenOfOwnerByIndexSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTokenOfOwnerByIndexParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.owner,
        options.index
    ]);
}
function encodeTokenOfOwnerByIndex(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTokenOfOwnerByIndexParams(options).slice(2);
}
function decodeTokenOfOwnerByIndexResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function tokenOfOwnerByIndex(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.owner,
            options.index
        ]
    });
} //# sourceMappingURL=tokenOfOwnerByIndex.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/read/getOwnedTokenIds.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getOwnedTokenIds": (()=>getOwnedTokenIds)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721A$2f$read$2f$balanceOf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721A/read/balanceOf.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721AQueryable$2f$read$2f$tokensOfOwner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721AQueryable/read/tokensOfOwner.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721Enumerable$2f$read$2f$tokenOfOwnerByIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/__generated__/IERC721Enumerable/read/tokenOfOwnerByIndex.js [app-client] (ecmascript)");
;
;
;
async function getOwnedTokenIds(options) {
    // try both paths, we take whichever one resolves first
    const result = await Promise.any([
        // get all the tokens owned by the owner
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721AQueryable$2f$read$2f$tokensOfOwner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tokensOfOwner"])({
            ...options
        }),
        // get the balance of the owner and then fetch each token ID
        // this is the "fallback" path really
        (async ()=>{
            const balanceOfResult = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721A$2f$read$2f$balanceOf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["balanceOf"])(options);
            const promises = [];
            for(let i = 0n; i < balanceOfResult; i++){
                promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$_$5f$generated_$5f2f$IERC721Enumerable$2f$read$2f$tokenOfOwnerByIndex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["tokenOfOwnerByIndex"])({
                    ...options,
                    index: i
                }));
            }
            return Promise.all(promises);
        })()
    ]).catch(()=>null);
    if (result) {
        return result;
    }
    throw new Error(`The contract at ${options.contract.address} on chain ${options.contract.chain.id} does not support the tokenOfOwnerByIndex or tokensOfOwner interface`);
} //# sourceMappingURL=getOwnedTokenIds.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/read/getOwnedNFTs.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getOwnedNFTs": (()=>getOwnedNFTs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/insight/get-nfts.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$read$2f$getNFT$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/read/getNFT.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$read$2f$getOwnedTokenIds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc721/read/getOwnedTokenIds.js [app-client] (ecmascript)");
;
;
;
async function getOwnedNFTs(options) {
    const { useIndexer = true } = options;
    if (useIndexer) {
        try {
            return await getOwnedNFTsFromInsight(options);
        } catch  {
            return await getOwnedNFTsFromRPC(options);
        }
    }
    return await getOwnedNFTsFromRPC(options);
}
async function getOwnedNFTsFromRPC(options) {
    const tokenIds = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$read$2f$getOwnedTokenIds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnedTokenIds"])(options);
    return Promise.all(tokenIds.map((tokenId)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc721$2f$read$2f$getNFT$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["getNFT"])({
            contract: options.contract,
            tokenId,
            useIndexer: false
        }).then((nft)=>({
                ...nft,
                // add the owner to the NFT since we know it
                owner: options.owner
            }))));
}
async function getOwnedNFTsFromInsight(options) {
    const limit = 50;
    const nfts = [];
    let page = 0;
    let hasMore = true;
    // TODO (insight): add support for contract address filters
    while(hasMore){
        const pageResults = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnedNFTs"])({
            client: options.contract.client,
            chains: [
                options.contract.chain
            ],
            ownerAddress: options.owner,
            queryOptions: {
                limit,
                page
            }
        });
        nfts.push(...pageResults);
        // If we got fewer results than the limit, we've reached the end
        if (pageResults.length < limit) {
            hasMore = false;
        } else {
            page++;
        }
    }
    const results = nfts;
    return results.filter((n)=>n.tokenAddress.toLowerCase() === options.contract.address.toLowerCase()).map((result)=>({
            ...result,
            owner: options.owner
        }));
} //# sourceMappingURL=getOwnedNFTs.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc165/__generated__/IERC165/read/supportsInterface.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeSupportsInterfaceResult": (()=>decodeSupportsInterfaceResult),
    "encodeSupportsInterface": (()=>encodeSupportsInterface),
    "encodeSupportsInterfaceParams": (()=>encodeSupportsInterfaceParams),
    "isSupportsInterfaceSupported": (()=>isSupportsInterfaceSupported),
    "supportsInterface": (()=>supportsInterface)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x01ffc9a7";
const FN_INPUTS = [
    {
        type: "bytes4",
        name: "interfaceId"
    }
];
const FN_OUTPUTS = [
    {
        type: "bool"
    }
];
function isSupportsInterfaceSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeSupportsInterfaceParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.interfaceId
    ]);
}
function encodeSupportsInterface(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeSupportsInterfaceParams(options).slice(2);
}
function decodeSupportsInterfaceResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function supportsInterface(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.interfaceId
        ]
    });
} //# sourceMappingURL=supportsInterface.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc721/read/isERC721.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isERC721": (()=>isERC721)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc165$2f$_$5f$generated_$5f2f$IERC165$2f$read$2f$supportsInterface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc165/__generated__/IERC165/read/supportsInterface.js [app-client] (ecmascript)");
;
function isERC721(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc165$2f$_$5f$generated_$5f2f$IERC165$2f$read$2f$supportsInterface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["supportsInterface"])({
        contract: options.contract,
        interfaceId: "0x80ac58cd"
    });
} //# sourceMappingURL=isERC721.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeTotalSupplyResult": (()=>decodeTotalSupplyResult),
    "encodeTotalSupply": (()=>encodeTotalSupply),
    "encodeTotalSupplyParams": (()=>encodeTotalSupplyParams),
    "isTotalSupplySupported": (()=>isTotalSupplySupported),
    "totalSupply": (()=>totalSupply)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0xbd85b039";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "id"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isTotalSupplySupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeTotalSupplyParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.id
    ]);
}
function encodeTotalSupply(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeTotalSupplyParams(options).slice(2);
}
function decodeTotalSupplyResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function totalSupply(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.id
        ]
    });
} //# sourceMappingURL=totalSupply.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeUriResult": (()=>decodeUriResult),
    "encodeUri": (()=>encodeUri),
    "encodeUriParams": (()=>encodeUriParams),
    "isUriSupported": (()=>isUriSupported),
    "uri": (()=>uri)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x0e89341c";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "tokenId"
    }
];
const FN_OUTPUTS = [
    {
        type: "string"
    }
];
function isUriSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeUriParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.tokenId
    ]);
}
function encodeUri(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeUriParams(options).slice(2);
}
function decodeUriResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function uri(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.tokenId
        ]
    });
} //# sourceMappingURL=uri.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getNFT": (()=>getNFT)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/insight/get-nfts.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$fetchTokenMetadata$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$parseNft$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/nft/parseNft.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155$2f$read$2f$totalSupply$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155$2f$read$2f$uri$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js [app-client] (ecmascript)");
;
;
;
;
;
;
async function getNFT(options) {
    const { useIndexer = true } = options;
    if (useIndexer) {
        try {
            return await getNFTFromInsight(options);
        } catch  {
            return await getNFTFromRPC(options);
        }
    }
    return await getNFTFromRPC(options);
}
async function getNFTFromInsight(options) {
    const nft = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getNFT"])({
        client: options.contract.client,
        chain: options.contract.chain,
        contractAddress: options.contract.address,
        tokenId: options.tokenId
    });
    if (!nft) {
        // fresh contracts might be delayed in indexing, so we fallback to RPC
        return getNFTFromRPC(options);
    }
    return nft;
}
async function getNFTFromRPC(options) {
    const [tokenUri, supply] = await Promise.all([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155$2f$read$2f$uri$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["uri"])({
            contract: options.contract,
            tokenId: options.tokenId
        }),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155$2f$read$2f$totalSupply$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["totalSupply"])({
            contract: options.contract,
            id: options.tokenId
        }).catch(()=>0n)
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$parseNft$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["parseNFT"])(await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$nft$2f$fetchTokenMetadata$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchTokenMetadata"])({
        client: options.contract.client,
        tokenId: options.tokenId,
        tokenUri
    }).catch(()=>({
            id: options.tokenId,
            type: "ERC1155",
            uri: tokenUri
        })), {
        tokenId: options.tokenId,
        tokenUri,
        type: "ERC1155",
        owner: null,
        supply,
        tokenAddress: options.contract.address,
        chainId: options.contract.chain.id
    });
} //# sourceMappingURL=getNFT.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/balanceOfBatch.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "balanceOfBatch": (()=>balanceOfBatch),
    "decodeBalanceOfBatchResult": (()=>decodeBalanceOfBatchResult),
    "encodeBalanceOfBatch": (()=>encodeBalanceOfBatch),
    "encodeBalanceOfBatchParams": (()=>encodeBalanceOfBatchParams),
    "isBalanceOfBatchSupported": (()=>isBalanceOfBatchSupported)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
;
const FN_SELECTOR = "0x4e1273f4";
const FN_INPUTS = [
    {
        type: "address[]",
        name: "_owners"
    },
    {
        type: "uint256[]",
        name: "tokenIds"
    }
];
const FN_OUTPUTS = [
    {
        type: "uint256[]"
    }
];
function isBalanceOfBatchSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function encodeBalanceOfBatchParams(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$abi$2f$encodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeAbiParameters"])(FN_INPUTS, [
        options.owners,
        options.tokenIds
    ]);
}
function encodeBalanceOfBatch(options) {
    // we do a "manual" concat here to avoid the overhead of the "concatHex" function
    // we can do this because we know the specific formats of the values
    return FN_SELECTOR + encodeBalanceOfBatchParams(options).slice(2);
}
function decodeBalanceOfBatchResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function balanceOfBatch(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: [
            options.owners,
            options.tokenIds
        ]
    });
} //# sourceMappingURL=balanceOfBatch.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155Enumerable/read/nextTokenIdToMint.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeNextTokenIdToMintResult": (()=>decodeNextTokenIdToMintResult),
    "isNextTokenIdToMintSupported": (()=>isNextTokenIdToMintSupported),
    "nextTokenIdToMint": (()=>nextTokenIdToMint)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
const FN_SELECTOR = "0x3b1475a7";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isNextTokenIdToMintSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function decodeNextTokenIdToMintResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function nextTokenIdToMint(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: []
    });
} //# sourceMappingURL=nextTokenIdToMint.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/Zora1155/read/nextTokenId.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FN_SELECTOR": (()=>FN_SELECTOR),
    "decodeNextTokenIdResult": (()=>decodeNextTokenIdResult),
    "isNextTokenIdSupported": (()=>isNextTokenIdSupported),
    "nextTokenId": (()=>nextTokenId)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/transaction/read-contract.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/node_modules/viem/_esm/utils/abi/decodeAbiParameters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js [app-client] (ecmascript)");
;
;
;
const FN_SELECTOR = "0x75794a3c";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "uint256"
    }
];
function isNextTokenIdSupported(availableSelectors) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$utils$2f$bytecode$2f$detectExtension$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detectMethod"])({
        availableSelectors,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ]
    });
}
function decodeNextTokenIdResult(result) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$node_modules$2f$viem$2f$_esm$2f$utils$2f$abi$2f$decodeAbiParameters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeAbiParameters"])(FN_OUTPUTS, result)[0];
}
async function nextTokenId(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$transaction$2f$read$2d$contract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readContract"])({
        contract: options.contract,
        method: [
            FN_SELECTOR,
            FN_INPUTS,
            FN_OUTPUTS
        ],
        params: []
    });
} //# sourceMappingURL=nextTokenId.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/read/getOwnedTokenIds.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getOwnedTokenIds": (()=>getOwnedTokenIds)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155$2f$read$2f$balanceOfBatch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/balanceOfBatch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155Enumerable$2f$read$2f$nextTokenIdToMint$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155Enumerable/read/nextTokenIdToMint.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$Zora1155$2f$read$2f$nextTokenId$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/Zora1155/read/nextTokenId.js [app-client] (ecmascript)");
;
;
;
const DEFAULT_QUERY_ALL_COUNT = 100;
async function getOwnedTokenIds(options) {
    const maxId = await Promise.allSettled([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155Enumerable$2f$read$2f$nextTokenIdToMint$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nextTokenIdToMint"])(options),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$Zora1155$2f$read$2f$nextTokenId$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nextTokenId"])(options)
    ]).then(([_nextToMint, _next])=>{
        if (_nextToMint.status === "fulfilled") {
            return _nextToMint.value;
        }
        if (_next.status === "fulfilled") {
            return _next.value;
        }
        throw Error("Contract doesn't have required extension");
    });
    // approach is naieve, likely can be improved
    const owners = [];
    const tokenIds = [];
    for(let i = 0n; i < maxId; i++){
        owners.push(options.address);
        tokenIds.push(i);
    }
    const balances = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$_$5f$generated_$5f2f$IERC1155$2f$read$2f$balanceOfBatch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["balanceOfBatch"])({
        ...options,
        owners,
        tokenIds
    });
    let ownedBalances = balances.map((b, i)=>{
        return {
            tokenId: BigInt(i),
            balance: b
        };
    }).filter((b)=>b.balance > 0);
    if (options.start || options.count) {
        const start = options?.start || 0;
        const count = options?.count || DEFAULT_QUERY_ALL_COUNT;
        ownedBalances = ownedBalances.slice(start, start + count);
    }
    return ownedBalances;
} //# sourceMappingURL=getOwnedTokenIds.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/read/getOwnedNFTs.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getOwnedNFTs": (()=>getOwnedNFTs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/insight/get-nfts.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$read$2f$getNFT$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$read$2f$getOwnedTokenIds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/read/getOwnedTokenIds.js [app-client] (ecmascript)");
;
;
;
async function getOwnedNFTs(options) {
    const { useIndexer = true } = options;
    if (useIndexer) {
        try {
            return await getOwnedNFTsFromInsight(options);
        } catch  {
            return await getOwnedNFTsFromRPC(options);
        }
    }
    return await getOwnedNFTsFromRPC(options);
}
async function getOwnedNFTsFromInsight(options) {
    const limit = 50;
    const nfts = [];
    let page = 0;
    let hasMore = true;
    // TODO (insight): add support for contract address filters
    while(hasMore){
        const pageResults = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$insight$2f$get$2d$nfts$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnedNFTs"])({
            client: options.contract.client,
            chains: [
                options.contract.chain
            ],
            ownerAddress: options.address,
            queryOptions: {
                limit,
                page
            }
        });
        nfts.push(...pageResults);
        // If we got fewer results than the limit, we've reached the end
        if (pageResults.length < limit) {
            hasMore = false;
        } else {
            page++;
        }
    }
    const results = nfts;
    return results.filter((n)=>n.tokenAddress.toLowerCase() === options.contract.address.toLowerCase()).map((result)=>({
            ...result,
            owner: options.address
        }));
}
async function getOwnedNFTsFromRPC(options) {
    const ownedBalances = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$read$2f$getOwnedTokenIds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnedTokenIds"])(options);
    const nfts = await Promise.all(ownedBalances.map((ob)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc1155$2f$read$2f$getNFT$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["getNFT"])({
            ...options,
            tokenId: ob.tokenId,
            useIndexer: false
        })));
    return nfts.map((nft, index)=>({
            ...nft,
            owner: options.address,
            quantityOwned: ownedBalances[index]?.balance || 0n
        }));
} //# sourceMappingURL=getOwnedNFTs.js.map
}}),
"[project]/node_modules/thirdweb/dist/esm/extensions/erc1155/read/isERC1155.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isERC1155": (()=>isERC1155)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc165$2f$_$5f$generated_$5f2f$IERC165$2f$read$2f$supportsInterface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/thirdweb/dist/esm/extensions/erc165/__generated__/IERC165/read/supportsInterface.js [app-client] (ecmascript)");
;
function isERC1155(options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$thirdweb$2f$dist$2f$esm$2f$extensions$2f$erc165$2f$_$5f$generated_$5f2f$IERC165$2f$read$2f$supportsInterface$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["supportsInterface"])({
        contract: options.contract,
        interfaceId: "0xd9b67a26"
    });
} //# sourceMappingURL=isERC1155.js.map
}}),
}]);

//# sourceMappingURL=node_modules_thirdweb_dist_esm_extensions_1e59550f._.js.map